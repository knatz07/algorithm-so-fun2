// р╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Ар╕Бр╕б
const gameData = {
    food: [
        {
            title: "р╕Бр╕▓р╕гр╕Чр╕│р╣Др╕Вр╣Ир╣Ар╕Ир╕╡р╕вр╕з",
            emoji: "ЁЯН│",
            steps: [
                { emoji: "ЁЯеЪ", text: "1. р╕Хр╕нр╕Бр╣Др╕Вр╣Ир╣Гр╕кр╣Ир╕Кр╕▓р╕б" },
                { emoji: "ЁЯеД", text: "2. р╕Хр╕╡р╣Др╕Вр╣Ир╣Гр╕лр╣Йр╣Ар╕Вр╣Йр╕▓р╕Бр╕▒р╕Щ" },
                { emoji: "ЁЯФе", text: "3. р╕Хр╕▒р╣Йр╕Зр╕Бр╕гр╕░р╕Чр╕░р╣Гр╕кр╣Ир╕Щр╣Йр╕│р╕бр╕▒р╕Щ" },
                { emoji: "ЁЯН│", text: "4. р╣Ар╕Чр╣Др╕Вр╣Ир╕ер╕Зр╕Бр╕гр╕░р╕Чр╕░" }
            ],
            correctOrders: [[0, 1, 2, 3]]
        },
        {
            title: "р╕Бр╕▓р╕гр╕Чр╕│р╕Вр╣Йр╕▓р╕зр╕Ьр╕▒р╕Ф",
            emoji: "ЁЯНЫ",
            steps: [
                { emoji: "ЁЯНЪ", text: "1. р╣Ар╕Хр╕гр╕╡р╕вр╕бр╕Вр╣Йр╕▓р╕зр╕кр╕зр╕в" },
                { emoji: "ЁЯеХ", text: "2. р╕лр╕▒р╣Ир╕Щр╕Ьр╕▒р╕Бр╣Бр╕ер╕░р╣Ар╕Щр╕╖р╣Йр╕нр╕кр╕▒р╕Хр╕зр╣М" },
                { emoji: "ЁЯФе", text: "3. р╕Хр╕▒р╣Йр╕Зр╕Бр╕гр╕░р╕Чр╕░р╣Гр╕кр╣Ир╕Щр╣Йр╕│р╕бр╕▒р╕Щ" },
                { emoji: "ЁЯН│", text: "4. р╕Ьр╕▒р╕Фр╕кр╣Ир╕зр╕Щр╕Ьр╕кр╕бр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф" }
            ],
            correctOrders: [[0, 1, 2, 3], [1, 0, 2, 3], [0, 2, 1, 3]]
        },
        {
            title: "р╕Бр╕▓р╕гр╕Хр╣Йр╕бр╕бр╕▓р╕бр╣Ир╕▓",
            emoji: "ЁЯНЬ",
            steps: [
                { emoji: "ЁЯТз", text: "1. р╣Гр╕кр╣Ир╕Щр╣Йр╕│р╣Гр╕Щр╕лр╕бр╣Йр╕н" },
                { emoji: "ЁЯФе", text: "2. р╣Ар╕Ыр╕┤р╕Фр╣Др╕Яр╕Хр╣Йр╕бр╕Щр╣Йр╕│" },
                { emoji: "ЁЯНЭ", text: "3. р╣Гр╕кр╣Ир╕Ър╕░р╕лр╕бр╕╡р╣Ир╕ер╕Зр╣Др╕Ы" },
                { emoji: "ЁЯзВ", text: "4. р╣Гр╕кр╣Ир╣Ар╕Др╕гр╕╖р╣Ир╕нр╕Зр╕Ыр╕гр╕╕р╕Зр╕гр╕к" }
            ],
            correctOrders: [[0, 1, 2, 3], [0, 1, 3, 2]]
        },
        {
            title: "р╕Бр╕▓р╕гр╕Чр╕│р╣Бр╕Лр╕Щр╕Фр╣Мр╕зр╕┤р╕К",
            emoji: "ЁЯек",
            steps: [
                { emoji: "ЁЯНЮ", text: "1. р╣Ар╕Хр╕гр╕╡р╕вр╕бр╕Вр╕Щр╕бр╕Ыр╕▒р╕З" },
                { emoji: "ЁЯзИ", text: "2. р╕Чр╕▓р╣Ар╕Щр╕вр╕лр╕гр╕╖р╕нр╕Лр╕нр╕к" },
                { emoji: "ЁЯем", text: "3. р╣Гр╕кр╣Ир╕Ьр╕▒р╕Бр╣Бр╕ер╕░р╣Бр╕ор╕б" },
                { emoji: "ЁЯФк", text: "4. р╕Хр╕▒р╕Фр╕Др╕гр╕╢р╣Ир╕Зр╣Бр╕ер╕░р╣Ар╕кр╕┤р╕гр╣Мр╕Я" }
            ],
            correctOrders: [[0, 1, 2, 3], [0, 2, 1, 3], [0, 3, 1, 2]]
        },
        {
            title: "р╕Бр╕▓р╕гр╕Чр╕│р╕Вр╣Йр╕▓р╕зр╕Хр╣Йр╕б",
            emoji: "ЁЯНЪ",
            steps: [
                { emoji: "ЁЯНЪ", text: "1. р╣Ар╕Хр╕гр╕╡р╕вр╕бр╕Вр╣Йр╕▓р╕зр╕кр╕зр╕в" },
                { emoji: "ЁЯТз", text: "2. р╣Гр╕кр╣Ир╕Щр╣Йр╕│р╣Гр╕Щр╕лр╕бр╣Йр╕н" },
                { emoji: "ЁЯФе", text: "3. р╕Хр╕▒р╣Йр╕Зр╣Др╕Яр╕Хр╣Йр╕бр╕Вр╣Йр╕▓р╕з" },
                { emoji: "ЁЯеД", text: "4. р╕Др╕Щр╕Вр╣Йр╕▓р╕зр╣Ар╕Ыр╣Зр╕Щр╕Др╕гр╕▒р╣Йр╕Зр╕Др╕гр╕▓р╕з" }
            ],
            correctOrders: [[0, 1, 2, 3], [1, 0, 2, 3]]
        },
        {
            title: "р╕Бр╕▓р╕гр╕Чр╕│р╕кр╕ер╕▒р╕Фр╕Ьр╕▒р╕Б",
            emoji: "ЁЯеЧ",
            steps: [
                { emoji: "ЁЯем", text: "1. р╕ер╣Йр╕▓р╕Зр╕Ьр╕▒р╕Бр╣Гр╕лр╣Йр╕кр╕░р╕нр╕▓р╕Ф" },
                { emoji: "ЁЯФк", text: "2. р╕лр╕▒р╣Ир╕Щр╕Ьр╕▒р╕Бр╣Ар╕Ыр╣Зр╕Щр╕Кр╕┤р╣Йр╕Щр╣Ар╕ер╣Зр╕Б" },
                { emoji: "ЁЯзВ", text: "3. р╣Ар╕Хр╕гр╕╡р╕вр╕бр╕Щр╣Йр╕│р╕кр╕ер╕▒р╕Ф" },
                { emoji: "ЁЯеД", text: "4. р╕Ьр╕кр╕бр╕Ьр╕▒р╕Бр╕Бр╕▒р╕Ър╕Щр╣Йр╕│р╕кр╕ер╕▒р╕Ф" }
            ],
            correctOrders: [[0, 1, 2, 3], [0, 2, 1, 3], [0, 1, 3, 2]]
        },
        {
            title: "р╕Бр╕▓р╕гр╕Чр╕│р╕Бр╕▓р╣Бр╕Я",
            emoji: "тШХ",
            steps: [
                { emoji: "ЁЯТз", text: "1. р╕Хр╣Йр╕бр╕Щр╣Йр╕│р╣Гр╕лр╣Йр╣Ар╕Фр╕╖р╕нр╕Ф" },
                { emoji: "тШХ", text: "2. р╣Гр╕кр╣Ир╕Бр╕▓р╣Бр╕Яр╕ер╕Зр╕Цр╣Йр╕зр╕в" },
                { emoji: "ЁЯФе", text: "3. р╣Ар╕Чр╕Щр╣Йр╕│р╕гр╣Йр╕нр╕Щр╕ер╕Зр╕Цр╣Йр╕зр╕в" },
                { emoji: "ЁЯеД", text: "4. р╕Др╕Щр╣Гр╕лр╣Йр╣Ар╕Вр╣Йр╕▓р╕Бр╕▒р╕Щ" }
            ],
            correctOrders: [[0, 1, 2, 3], [1, 0, 2, 3], [0, 1, 3, 2]]
        },
        {
            title: "р╕Бр╕▓р╕гр╕Чр╕│р╕Вр╣Йр╕▓р╕зр╣Вр╕Юр╕Фр╕Хр╣Йр╕б",
            emoji: "ЁЯМ╜",
            steps: [
                { emoji: "ЁЯМ╜", text: "1. р╣Ар╕Хр╕гр╕╡р╕вр╕бр╕Вр╣Йр╕▓р╕зр╣Вр╕Юр╕Ф" },
                { emoji: "ЁЯТз", text: "2. р╣Гр╕кр╣Ир╕Щр╣Йр╕│р╣Гр╕Щр╕лр╕бр╣Йр╕н" },
                { emoji: "ЁЯФе", text: "3. р╕Хр╣Йр╕бр╕Вр╣Йр╕▓р╕зр╣Вр╕Юр╕Ф 15 р╕Щр╕▓р╕Чр╕╡" },
                { emoji: "ЁЯзВ", text: "4. р╣Гр╕кр╣Ир╣Ар╕Бр╕ер╕╖р╕нр╣Ар╕ер╣Зр╕Бр╕Щр╣Йр╕нр╕в" }
            ],
            correctOrders: [[0, 1, 2, 3], [1, 0, 2, 3], [0, 1, 3, 2], [1, 0, 3, 2]]
        },
        {
            title: "р╕Бр╕▓р╕гр╕Чр╕│р╕Кр╕▓р╣Ар╕вр╣Зр╕Щ",
            emoji: "ЁЯзК",
            steps: [
                { emoji: "ЁЯТз", text: "1. р╕Хр╣Йр╕бр╕Щр╣Йр╕│р╣Гр╕лр╣Йр╣Ар╕Фр╕╖р╕нр╕Ф" },
                { emoji: "ЁЯНГ", text: "2. р╕Кр╕Зр╕Кр╕▓р╣Гр╕лр╣Йр╣Ар╕Вр╣Йр╕б" },
                { emoji: "ЁЯзК", text: "3. р╣Гр╕кр╣Ир╕Щр╣Йр╕│р╣Бр╕Вр╣Зр╕Зр╣Гр╕Щр╣Бр╕Бр╣Йр╕з" },
                { emoji: "ЁЯед", text: "4. р╣Ар╕Чр╕Кр╕▓р╕ер╕Зр╣Гр╕Щр╣Бр╕Бр╣Йр╕з" }
            ],
            correctOrders: [[0, 1, 2, 3], [0, 2, 1, 3], [2, 0, 1, 3]]
        },
        {
            title: "р╕Бр╕▓р╕гр╕Чр╕│р╣Ар╕Яр╕гр╕Щр╕Кр╣Мр╣Вр╕Чр╕кр╕Хр╣М",
            emoji: "ЁЯНЮ",
            steps: [
                { emoji: "ЁЯеЪ", text: "1. р╕Хр╕╡р╣Др╕Вр╣Ир╣Гр╕кр╣Ир╕Щр╕б" },
                { emoji: "ЁЯНЮ", text: "2. р╕Ир╕╕р╣Ир╕бр╕Вр╕Щр╕бр╕Ыр╕▒р╕Зр╣Др╕Вр╣И" },
                { emoji: "ЁЯФе", text: "3. р╕Хр╕▒р╣Йр╕Зр╕Бр╕гр╕░р╕Чр╕░р╣Гр╕кр╣Ир╣Ар╕Щр╕в" },
                { emoji: "ЁЯН│", text: "4. р╕Чр╕нр╕Фр╕Вр╕Щр╕бр╕Ыр╕▒р╕Зр╕Чр╕▒р╣Йр╕Зр╕кр╕нр╕Зр╕Фр╣Йр╕▓р╕Щ" }
            ],
            correctOrders: [[0, 1, 2, 3], [0, 2, 1, 3], [2, 0, 1, 3]]
        }
    ],
    math: [
        {
            title: "р╕Бр╕▓р╕гр╕Ър╕зр╕Бр╣Ар╕ер╕В",
            emoji: "тЮХ",
            steps: [
                { emoji: "ЁЯУЭ", text: "1. р╣Ар╕Вр╕╡р╕вр╕Щр╕Хр╕▒р╕зр╣Ар╕ер╕Вр╣Гр╕Щр╣Бр╕Щр╕зр╕Хр╕▒р╣Йр╕З" },
                { emoji: "ЁЯСА", text: "2. р╕Фр╕╣р╕лр╕ер╕▒р╕Бр╕лр╕Щр╣Ир╕зр╕в" },
                { emoji: "ЁЯФв", text: "3. р╕Ър╕зр╕Бр╕Хр╕▒р╕зр╣Ар╕ер╕Вр╕Чр╕╡р╕ер╕░р╕лр╕ер╕▒р╕Б" },
                { emoji: "тЬЕ", text: "4. р╣Ар╕Вр╕╡р╕вр╕Щр╕Др╕│р╕Хр╕нр╕Ъ" }
            ],
            correctOrders: [[0, 1, 2, 3]]
        },
        {
            title: "р╕Бр╕▓р╕гр╕ер╕Ър╣Ар╕ер╕В",
            emoji: "тЮЦ",
            steps: [
                { emoji: "ЁЯУЭ", text: "1. р╣Ар╕Вр╕╡р╕вр╕Щр╕Хр╕▒р╕зр╣Ар╕ер╕Вр╣Гр╕Щр╣Бр╕Щр╕зр╕Хр╕▒р╣Йр╕З" },
                { emoji: "ЁЯСА", text: "2. р╕Фр╕╣р╕лр╕ер╕▒р╕Бр╕лр╕Щр╣Ир╕зр╕в" },
                { emoji: "ЁЯФв", text: "3. р╕ер╕Ър╕Хр╕▒р╕зр╣Ар╕ер╕Вр╕Чр╕╡р╕ер╕░р╕лр╕ер╕▒р╕Б" },
                { emoji: "тЬЕ", text: "4. р╣Ар╕Вр╕╡р╕вр╕Щр╕Др╕│р╕Хр╕нр╕Ъ" }
            ],
            correctOrders: [[0, 1, 2, 3]]
        },
        {
            title: "р╕Бр╕▓р╕гр╕Др╕╣р╕Ур╣Ар╕ер╕В",
            emoji: "тЬЦя╕П",
            steps: [
                { emoji: "ЁЯУЭ", text: "1. р╣Ар╕Вр╕╡р╕вр╕Щр╕Хр╕▒р╕зр╣Ар╕ер╕Вр╣Гр╕Щр╣Бр╕Щр╕зр╕Хр╕▒р╣Йр╕З" },
                { emoji: "ЁЯФв", text: "2. р╕Др╕╣р╕Ур╕Хр╕▒р╕зр╣Ар╕ер╕Вр╕лр╕ер╕▒р╕Бр╕лр╕Щр╣Ир╕зр╕в" },
                { emoji: "ЁЯФв", text: "3. р╕Др╕╣р╕Ур╕Хр╕▒р╕зр╣Ар╕ер╕Вр╕лр╕ер╕▒р╕Бр╕кр╕┤р╕Ъ" },
                { emoji: "тЮХ", text: "4. р╕Ър╕зр╕Бр╕Ьр╕ер╕ер╕▒р╕Юр╕Шр╣Мр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф" }
            ],
            correctOrders: [[0, 1, 2, 3]]
        },
        {
            title: "р╕Бр╕▓р╕гр╕лр╕▓р╕гр╣Ар╕ер╕В",
            emoji: "тЮЧ",
            steps: [
                { emoji: "ЁЯУЭ", text: "1. р╣Ар╕Вр╕╡р╕вр╕Щр╕кр╕▒р╕Нр╕ер╕▒р╕Бр╕йр╕Ур╣Мр╕лр╕▓р╕г" },
                { emoji: "ЁЯФв", text: "2. р╕лр╕▓р╕гр╕Хр╕▒р╕зр╣Ар╕ер╕Вр╕лр╕ер╕▒р╕Бр╣Бр╕гр╕Б" },
                { emoji: "ЁЯФв", text: "3. р╕Щр╕│р╣Ар╕ир╕йр╕ер╕Зр╕бр╕▓" },
                { emoji: "ЁЯФД", text: "4. р╕Чр╕│р╕Лр╣Йр╕│р╕Ир╕Щр╕лр╕бр╕Ф" }
            ],
            correctOrders: [[0, 1, 2, 3]]
        },
        {
            title: "р╕Бр╕▓р╕гр╕лр╕▓р╕Др╣Ир╕▓р╣Ар╕Йр╕ер╕╡р╣Ир╕в",
            emoji: "ЁЯУК",
            steps: [
                { emoji: "ЁЯУЭ", text: "1. р╣Ар╕Вр╕╡р╕вр╕Щр╕Хр╕▒р╕зр╣Ар╕ер╕Вр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф" },
                { emoji: "тЮХ", text: "2. р╕Ър╕зр╕Бр╕Хр╕▒р╕зр╣Ар╕ер╕Вр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф" },
                { emoji: "ЁЯФв", text: "3. р╕Щр╕▒р╕Ър╕Ир╕│р╕Щр╕зр╕Щр╕Хр╕▒р╕зр╣Ар╕ер╕В" },
                { emoji: "тЮЧ", text: "4. р╕лр╕▓р╕гр╕Ьр╕ер╕гр╕зр╕бр╕Фр╣Йр╕зр╕вр╕Ир╕│р╕Щр╕зр╕Щ" }
            ],
            correctOrders: [[0, 1, 2, 3], [0, 2, 1, 3], [2, 0, 1, 3]]
        },
        {
            title: "р╕Бр╕▓р╕гр╣Ар╕Ыр╕гр╕╡р╕вр╕Ър╣Ар╕Чр╕╡р╕вр╕Ър╣Ар╕ир╕йр╕кр╣Ир╕зр╕Щ",
            emoji: "ЁЯФН",
            steps: [
                { emoji: "ЁЯУЭ", text: "1. р╣Ар╕Вр╕╡р╕вр╕Щр╣Ар╕ир╕йр╕кр╣Ир╕зр╕Щр╕Чр╕▒р╣Йр╕Зр╕кр╕нр╕З" },
                { emoji: "ЁЯФв", text: "2. р╕лр╕▓р╕Хр╕▒р╕зр╕Др╕╣р╕Ур╕гр╣Ир╕зр╕бр╕Щр╣Йр╕нр╕в" },
                { emoji: "тЬЦя╕П", text: "3. р╕Вр╕вр╕▓р╕вр╣Ар╕ир╕йр╕кр╣Ир╕зр╕Щр╣Гр╕лр╣Йр╣Ар╕Чр╣Ир╕▓" },
                { emoji: "ЁЯСА", text: "4. р╣Ар╕Ыр╕гр╕╡р╕вр╕Ър╣Ар╕Чр╕╡р╕вр╕Ър╣Ар╕ир╕йр╕кр╣Ир╕зр╕Щ" }
            ],
            correctOrders: [[0, 1, 2, 3]]
        },
        {
            title: "р╕Бр╕▓р╕гр╣Бр╕Бр╣Йр╕кр╕бр╕Бр╕▓р╕г",
            emoji: "ЁЯФС",
            steps: [
                { emoji: "ЁЯУЭ", text: "1. р╣Ар╕Вр╕╡р╕вр╕Щр╕кр╕бр╕Бр╕▓р╕г" },
                { emoji: "ЁЯФв", text: "2. р╕вр╣Йр╕▓р╕вр╕Хр╕▒р╕зр╣Ар╕ер╕Вр╕Вр╣Йр╕▓р╕Зр╕лр╕Щр╕╢р╣Ир╕З" },
                { emoji: "ЁЯФД", text: "3. р╕Чр╕│р╕Бр╕▓р╕гр╕Др╕│р╕Щр╕зр╕У" },
                { emoji: "тЬЕ", text: "4. р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Др╕│р╕Хр╕нр╕Ъ" }
            ],
            correctOrders: [[0, 1, 2, 3]]
        },
        {
            title: "р╕Бр╕▓р╕гр╕лр╕▓р╕Юр╕╖р╣Йр╕Щр╕Чр╕╡р╣Ир╕кр╕╡р╣Ир╣Ар╕лр╕ер╕╡р╣Ир╕вр╕б",
            emoji: "ЁЯУР",
            steps: [
                { emoji: "ЁЯУП", text: "1. р╕зр╕▒р╕Фр╕Др╕зр╕▓р╕бр╕вр╕▓р╕з" },
                { emoji: "ЁЯУП", text: "2. р╕зр╕▒р╕Фр╕Др╕зр╕▓р╕бр╕Бр╕зр╣Йр╕▓р╕З" },
                { emoji: "тЬЦя╕П", text: "3. р╕Др╕╣р╕Ур╕вр╕▓р╕з x р╕Бр╕зр╣Йр╕▓р╕З" },
                { emoji: "ЁЯУЭ", text: "4. р╣Ар╕Вр╕╡р╕вр╕Щр╕лр╕Щр╣Ир╕зр╕вр╕Юр╕╖р╣Йр╕Щр╕Чр╕╡р╣И" }
            ],
            correctOrders: [[0, 1, 2, 3], [1, 0, 2, 3], [0, 1, 3, 2], [1, 0, 3, 2]]
        },
        {
            title: "р╕Бр╕▓р╕гр╕лр╕▓р╣Ар╕Ыр╕нр╕гр╣Мр╣Ар╕Лр╣Зр╕Щр╕Хр╣М",
            emoji: "%",
            steps: [
                { emoji: "ЁЯУЭ", text: "1. р╣Ар╕Вр╕╡р╕вр╕Щр╣Ар╕ир╕йр╕кр╣Ир╕зр╕Щ" },
                { emoji: "тЮЧ", text: "2. р╕лр╕▓р╕гр╣Ар╕ир╕йр╕Фр╣Йр╕зр╕вр╕кр╣Ир╕зр╕Щ" },
                { emoji: "тЬЦя╕П", text: "3. р╕Др╕╣р╕Ур╕Фр╣Йр╕зр╕в 100" },
                { emoji: "%", text: "4. р╣Гр╕кр╣Ир╣Ар╕Др╕гр╕╖р╣Ир╕нр╕Зр╕лр╕бр╕▓р╕в %" }
            ],
            correctOrders: [[0, 1, 2, 3]]
        },
        {
            title: "р╕Бр╕▓р╕гр╣Бр╕Ыр╕ер╕Зр╕лр╕Щр╣Ир╕зр╕в",
            emoji: "ЁЯФД",
            steps: [
                { emoji: "ЁЯУЭ", text: "1. р╣Ар╕Вр╕╡р╕вр╕Щр╕Хр╕▒р╕зр╣Ар╕ер╕Вр╣Бр╕ер╕░р╕лр╕Щр╣Ир╕зр╕в" },
                { emoji: "ЁЯФв", text: "2. р╕лр╕▓р╕нр╕▒р╕Хр╕гр╕▓р╕кр╣Ир╕зр╕Щр╕Бр╕▓р╕гр╣Бр╕Ыр╕ер╕З" },
                { emoji: "тЬЦя╕П", text: "3. р╕Др╕╣р╕Ур╕Фр╣Йр╕зр╕вр╕нр╕▒р╕Хр╕гр╕▓р╕кр╣Ир╕зр╕Щ" },
                { emoji: "ЁЯУЭ", text: "4. р╣Ар╕Вр╕╡р╕вр╕Щр╕лр╕Щр╣Ир╕зр╕вр╣Гр╕лр╕бр╣И" }
            ],
            correctOrders: [[0, 1, 2, 3]]
        }
    ],
    life: [
        {
            title: "р╕Бр╕▓р╕гр╣Бр╕Ыр╕гр╕Зр╕Яр╕▒р╕Щ",
            emoji: "ЁЯж╖",
            steps: [
                { emoji: "ЁЯЪ┐", text: "1. р╣Ар╕Ыр╕┤р╕Фр╕Щр╣Йр╕│" },
                { emoji: "ЁЯке", text: "2. р╣Гр╕кр╣Ир╕вр╕▓р╕кр╕╡р╕Яр╕▒р╕Щ" },
                { emoji: "тЬи", text: "3. р╣Бр╕Ыр╕гр╕Зр╕Яр╕▒р╕Щр╣Гр╕лр╣Йр╕кр╕░р╕нр╕▓р╕Ф" },
                { emoji: "ЁЯТз", text: "4. р╕Ър╣Йр╕зр╕Щр╕Ыр╕▓р╕Бр╕Фр╣Йр╕зр╕вр╕Щр╣Йр╕│" }
            ],
            correctOrders: [[0, 1, 2, 3]]
        },
        {
            title: "р╕Бр╕▓р╕гр╣Ар╕Хр╕гр╕╡р╕вр╕бр╕Хр╕▒р╕зр╣Др╕Ыр╣Вр╕гр╕Зр╣Ар╕гр╕╡р╕вр╕Щ",
            emoji: "ЁЯОТ",
            steps: [
                { emoji: "тП░", text: "1. р╕Хр╕╖р╣Ир╕Щр╕Щр╕нр╕Щ" },
                { emoji: "ЁЯЪ┐", text: "2. р╕нр╕▓р╕Ър╕Щр╣Йр╕│р╣Бр╕Ыр╕гр╕Зр╕Яр╕▒р╕Щ" },
                { emoji: "ЁЯСХ", text: "3. р╣Бр╕Хр╣Ир╕Зр╕Хр╕▒р╕зр╣Гр╕кр╣Ир╕Кр╕╕р╕Фр╕Щр╕▒р╕Бр╣Ар╕гр╕╡р╕вр╕Щ" },
                { emoji: "ЁЯОТ", text: "4. р╣Ар╕Бр╣Зр╕Ър╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╣Гр╕кр╣Ир╕Бр╕гр╕░р╣Ар╕Ыр╣Лр╕▓" }
            ],
            correctOrders: [[0, 1, 2, 3], [0, 1, 3, 2], [0, 3, 1, 2]]
        },
        {
            title: "р╕Бр╕▓р╕гр╕ер╣Йр╕▓р╕Зр╕Ир╕▓р╕Щ",
            emoji: "ЁЯН╜я╕П",
            steps: [
                { emoji: "ЁЯЪ┐", text: "1. р╣Ар╕Ыр╕┤р╕Фр╕Щр╣Йр╕│" },
                { emoji: "ЁЯз╜", text: "2. р╣Гр╕кр╣Ир╕Щр╣Йр╕│р╕вр╕▓р╕ер╣Йр╕▓р╕Зр╕Ир╕▓р╕Щ" },
                { emoji: "тЬи", text: "3. р╕Вр╕▒р╕Фр╕Ир╕▓р╕Щр╣Гр╕лр╣Йр╕кр╕░р╕нр╕▓р╕Ф" },
                { emoji: "ЁЯТз", text: "4. р╕ер╣Йр╕▓р╕Зр╕Щр╣Йр╕│р╣Гр╕лр╣Йр╕лр╕бр╕Ф" }
            ],
            correctOrders: [[0, 1, 2, 3], [1, 0, 2, 3], [0, 2, 1, 3]]
        },
        {
            title: "р╕Бр╕▓р╕гр╕Чр╕│р╕Др╕зр╕▓р╕бр╕кр╕░р╕нр╕▓р╕Фр╕лр╣Йр╕нр╕З",
            emoji: "ЁЯз╣",
            steps: [
                { emoji: "ЁЯз╕", text: "1. р╣Ар╕Бр╣Зр╕Ър╕Вр╕нр╕Зр╣Ар╕ер╣Ир╕Щ" },
                { emoji: "ЁЯЫПя╕П", text: "2. р╣Ар╕Бр╣Зр╕Ър╕Чр╕╡р╣Ир╕Щр╕нр╕Щ" },
                { emoji: "ЁЯз╣", text: "3. р╕Бр╕зр╕▓р╕Фр╕Юр╕╖р╣Йр╕Щр╕лр╣Йр╕нр╕З" },
                { emoji: "ЁЯкг", text: "4. р╕Цр╕╣р╕Юр╕╖р╣Йр╕Щр╕лр╣Йр╕нр╕З" }
            ],
            correctOrders: [[0, 1, 2, 3], [1, 0, 2, 3], [0, 2, 1, 3], [1, 2, 0, 3]]
        },
        {
            title: "р╕Бр╕▓р╕гр╣Ар╕Хр╕гр╕╡р╕вр╕бр╕Бр╕гр╕░р╣Ар╕Ыр╣Лр╕▓р╣Ар╕Фр╕┤р╕Щр╕Чр╕▓р╕З",
            emoji: "ЁЯз│",
            steps: [
                { emoji: "ЁЯУЭ", text: "1. р╕Чр╕│р╕гр╕▓р╕вр╕Бр╕▓р╕гр╕кр╕┤р╣Ир╕Зр╕Вр╕нр╕З" },
                { emoji: "ЁЯСХ", text: "2. р╣Ар╕Хр╕гр╕╡р╕вр╕бр╣Ар╕кр╕╖р╣Йр╕нр╕Ьр╣Йр╕▓" },
                { emoji: "ЁЯз┤", text: "3. р╣Ар╕Хр╕гр╕╡р╕вр╕бр╕Вр╕нр╕Зр╣Гр╕Кр╣Йр╕кр╣Ир╕зр╕Щр╕Хр╕▒р╕з" },
                { emoji: "ЁЯз│", text: "4. р╣Гр╕кр╣Ир╕Вр╕нр╕Зр╣Гр╕Щр╕Бр╕гр╕░р╣Ар╕Ыр╣Лр╕▓" }
            ],
            correctOrders: [[0, 1, 2, 3], [0, 2, 1, 3], [1, 2, 0, 3], [2, 1, 0, 3]]
        },
        {
            title: "р╕Бр╕▓р╕гр╕Ыр╕ер╕╣р╕Бр╕Хр╣Йр╕Щр╣Др╕бр╣Й",
            emoji: "ЁЯМ▒",
            steps: [
                { emoji: "ЁЯХ│я╕П", text: "1. р╕Вр╕╕р╕Фр╕лр╕ер╕╕р╕бр╣Гр╕Щр╕Фр╕┤р╕Щ" },
                { emoji: "ЁЯМ▒", text: "2. р╣Гр╕кр╣Ир╕Хр╣Йр╕Щр╕Бр╕ер╣Йр╕▓р╕ер╕Зр╕лр╕ер╕╕р╕б" },
                { emoji: "ЁЯМН", text: "3. р╕Бр╕ер╕Ър╕Фр╕┤р╕Щр╣Гр╕лр╣Йр╕бр╕┤р╕Ф" },
                { emoji: "ЁЯТз", text: "4. р╕гр╕Фр╕Щр╣Йр╕│р╣Гр╕лр╣Йр╕Хр╣Йр╕Щр╣Др╕бр╣Й" }
            ],
            correctOrders: [[0, 1, 2, 3]]
        },
        {
            title: "р╕Бр╕▓р╕гр╕Чр╕│р╕Бр╕▓р╕гр╕Ър╣Йр╕▓р╕Щ",
            emoji: "ЁЯУЪ",
            steps: [
                { emoji: "ЁЯОТ", text: "1. р╣Ар╕нр╕▓р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╕нр╕нр╕Бр╕Ир╕▓р╕Бр╕Бр╕гр╕░р╣Ар╕Ыр╣Лр╕▓" },
                { emoji: "ЁЯУЦ", text: "2. р╕нр╣Ир╕▓р╕Щр╣Вр╕Ир╕Чр╕вр╣Мр╣Гр╕лр╣Йр╣Ар╕Вр╣Йр╕▓р╣Гр╕И" },
                { emoji: "тЬПя╕П", text: "3. р╕Чр╕│р╕Бр╕▓р╕гр╕Ър╣Йр╕▓р╕Щр╕Чр╕╡р╕ер╕░р╕Вр╣Йр╕н" },
                { emoji: "тЬЕ", text: "4. р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Др╕│р╕Хр╕нр╕Ъ" }
            ],
            correctOrders: [[0, 1, 2, 3]]
        },
        {
            title: "р╕Бр╕▓р╕гр╕Лр╕▒р╕Бр╕Ьр╣Йр╕▓",
            emoji: "ЁЯСХ",
            steps: [
                { emoji: "ЁЯз║", text: "1. р╣Бр╕вр╕Бр╣Ар╕кр╕╖р╣Йр╕нр╕Ьр╣Йр╕▓р╕Хр╕▓р╕бр╕кр╕╡" },
                { emoji: "ЁЯз┤", text: "2. р╣Гр╕кр╣Ир╕Ьр╕Зр╕Лр╕▒р╕Бр╕Яр╕нр╕Б" },
                { emoji: "ЁЯТз", text: "3. р╣Гр╕кр╣Ир╕Щр╣Йр╕│р╕Хр╕▓р╕бр╕гр╕░р╕Фр╕▒р╕Ъ" },
                { emoji: "ЁЯФД", text: "4. р╣Ар╕Ыр╕┤р╕Фр╣Ар╕Др╕гр╕╖р╣Ир╕нр╕Зр╕Лр╕▒р╕Бр╕Ьр╣Йр╕▓" }
            ],
            correctOrders: [[0, 1, 2, 3], [0, 2, 1, 3], [0, 3, 1, 2], [0, 3, 2, 1]]
        },
        {
            title: "р╕Бр╕▓р╕гр╕Чр╕│р╕кр╕зр╕Щ",
            emoji: "ЁЯМ╗",
            steps: [
                { emoji: "ЁЯМ▒", text: "1. р╣Ар╕Хр╕гр╕╡р╕вр╕бр╣Ар╕бр╕ер╣Зр╕Фр╕Юр╕▒р╕Щр╕Шр╕╕р╣М" },
                { emoji: "ЁЯМН", text: "2. р╣Ар╕Хр╕гр╕╡р╕вр╕бр╕Фр╕┤р╕Щр╕Ыр╕ер╕╣р╕Б" },
                { emoji: "ЁЯХ│я╕П", text: "3. р╕лр╕зр╣Ир╕▓р╕Щр╣Ар╕бр╕ер╣Зр╕Фр╕ер╕Зр╕Фр╕┤р╕Щ" },
                { emoji: "ЁЯТз", text: "4. р╕гр╕Фр╕Щр╣Йр╕│р╣Ар╕Ыр╣Зр╕Щр╕Ыр╕гр╕░р╕Ир╕│" }
            ],
            correctOrders: [[0, 1, 2, 3], [1, 0, 2, 3], [0, 2, 1, 3]]
        },
        {
            title: "р╕Бр╕▓р╕гр╕нр╕нр╕Бр╕Бр╕│р╕ер╕▒р╕Зр╕Бр╕▓р╕в",
            emoji: "ЁЯПГ",
            steps: [
                { emoji: "ЁЯСХ", text: "1. р╣Ар╕Ыр╕ер╕╡р╣Ир╕вр╕Щр╕Кр╕╕р╕Фр╕нр╕нр╕Бр╕Бр╕│р╕ер╕▒р╕Зр╕Бр╕▓р╕в" },
                { emoji: "ЁЯд╕", text: "2. р╕зр╕нр╕гр╣Мр╕бр╕нр╕▒р╕Юр╕гр╣Ир╕▓р╕Зр╕Бр╕▓р╕в" },
                { emoji: "ЁЯПГ", text: "3. р╕нр╕нр╕Бр╕Бр╕│р╕ер╕▒р╕Зр╕Бр╕▓р╕вр╕Ир╕гр╕┤р╕Зр╕Ир╕▒р╕З" },
                { emoji: "ЁЯТз", text: "4. р╕Фр╕╖р╣Ир╕бр╕Щр╣Йр╕│р╣Бр╕ер╕░р╕Юр╕▒р╕Бр╕Ьр╣Ир╕нр╕Щ" }
            ],
            correctOrders: [[0, 1, 2, 3]]
        }
    ]
};

// р╕кр╕Цр╕▓р╕Щр╕░р╣Ар╕Бр╕б
let players = [];
let currentPlayerIndex = 0;
let currentCategory = '';
let currentQuestionIndex = 0;
let timerInterval;
let timeLeft = 0;
const TIME_PER_QUESTION = 60; // р╕зр╕┤р╕Щр╕▓р╕Чр╕╡
const MAX_QUESTIONS = 10;

// р╕Фр╕╢р╕З DOM Elements р╕Чр╕╡р╣Ир╕Ир╕│р╣Ар╕Ыр╣Зр╕Щ
const startScreen = document.getElementById('start-screen');
const registerScreen = document.getElementById('register-screen');
const categoryScreen = document.getElementById('category-screen');
const gameScreen = document.getElementById('game-screen');
const resultScreen = document.getElementById('result-screen');

const playerCountButtons = document.querySelectorAll('.player-count-btn');
const playerInputsContainer = document.getElementById('player-inputs');
const backToStartBtn = document.getElementById('back-to-start-btn');
const startGameBtn = document.getElementById('start-game-btn');

const categoryCards = document.querySelectorAll('.category-card');
const currentPlayerDisplay = document.getElementById('current-player-display');

const gamePlayerName = document.getElementById('game-player-name');
const gamePlayerScore = document.getElementById('game-player-score');
const questionNumberDisplay = document.getElementById('question-number');
const timerDisplay = document.getElementById('timer');
const timerBar = document.getElementById('timer-bar');
const questionImage = document.getElementById('question-image');
const questionTitle = document.getElementById('question-title');
const stepsContainer = document.getElementById('steps-container');
const dropZonesContainer = document.getElementById('drop-zones');
const submitAnswerBtn = document.getElementById('submit-answer-btn');
const nextQuestionBtn = document.getElementById('next-question-btn');
const resetAnswerBtn = document.getElementById('reset-answer-btn');
const backToHomeFromGameBtn = document.getElementById('back-to-home-from-game-btn');

const resultPlayerName = document.getElementById('result-player-name');
const resultPlayerScore = document.getElementById('result-player-score');
const resultPlayerLevel = document.getElementById('result-player-level');
const leaderboard = document.getElementById('leaderboard');
const playAgainBtn = document.getElementById('play-again-btn');
const newGameBtn = document.getElementById('new-game-btn');
const confettiContainer = document.getElementById('confetti-container');
const backToHomeBtn = document.getElementById('back-to-home-btn');

// Modal elements
const answerModal = document.getElementById('answer-modal');
const modalContent = document.getElementById('modal-content');
const closeModalBtn = document.getElementById('close-modal-btn');

// --- р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕Юр╕╖р╣Йр╕Щр╕Рр╕▓р╕Щр╕кр╕│р╕лр╕гр╕▒р╕Ър╕Бр╕▓р╕гр╣Бр╕кр╕Фр╕Зр╕лр╕Щр╣Йр╕▓р╕Ир╕н ---
function showScreen(screenId) {
    document.querySelectorAll('.screen').forEach(screen => {
        screen.classList.remove('active');
    });
    document.getElementById(screenId).classList.add('active');
}

// --- р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╣Ар╕гр╕┤р╣Ир╕бр╕Хр╣Йр╕Щр╣Ар╕Бр╕бр╣Бр╕ер╕░р╕Ир╕▒р╕Фр╕Бр╕▓р╕гр╕Ьр╕╣р╣Йр╣Ар╕ер╣Ир╕Щ ---
function setupPlayerRegistration(count) {
    players = [];
    playerInputsContainer.innerHTML = ''; // р╣Ар╕Др╕ер╕╡р╕вр╕гр╣М input р╣Ар╕Фр╕┤р╕б
    for (let i = 1; i <= count; i++) {
        players.push({ id: i, name: `р╕Ьр╕╣р╣Йр╣Ар╕ер╣Ир╕Щ ${i}`, score: 0 }); // р╕кр╕гр╣Йр╕▓р╕З Object р╕Ьр╕╣р╣Йр╣Ар╕ер╣Ир╕Щ
        const inputDiv = document.createElement('div');
        inputDiv.className = 'mb-4';
        inputDiv.innerHTML = `
            <label for="player-name-${i}" class="block text-gray-700 text-lg font-medium mb-2 text-left">р╕Кр╕╖р╣Ир╕нр╕Ьр╕╣р╣Йр╣Ар╕ер╣Ир╕Щ ${i}:</label>
            <input type="text" id="player-name-${i}" placeholder="р╣Гр╕кр╣Ир╕Кр╕╖р╣Ир╕нр╕Чр╕╡р╣Ир╕Щр╕╡р╣И" class="w-full p-3 border border-gray-300 rounded-lg text-lg focus:ring-blue-500 focus:border-blue-500">
        `;
        playerInputsContainer.appendChild(inputDiv);
    }
    showScreen('register-screen');
}

function startNewGame() {
    // р╣Ар╕Бр╣Зр╕Ър╕Кр╕╖р╣Ир╕нр╕Ьр╕╣р╣Йр╣Ар╕ер╣Ир╕Щр╕Ир╕▓р╕Б input
    players.forEach((player, index) => {
        const inputElement = document.getElementById(`player-name-${player.id}`);
        if (inputElement && inputElement.value.trim() !== '') {
            player.name = inputElement.value.trim();
        }
        player.score = 0; // р╕гр╕╡р╣Ар╕Лр╣Зр╕Хр╕Др╕░р╣Бр╕Щр╕Щ
    });

    currentPlayerIndex = 0;
    currentCategory = '';
    currentQuestionIndex = 0;
    // р╣Ар╕гр╕┤р╣Ир╕бр╕Хр╣Йр╕Щр╕Бр╕▓р╕гр╣Ар╕ер╣Ир╕Щр╕кр╕│р╕лр╕гр╕▒р╕Ър╕Ьр╕╣р╣Йр╣Ар╕ер╣Ир╕Щр╕Др╕Щр╣Бр╕гр╕Б
    showCategorySelection();
}

function showCategorySelection() {
    const currentPlayer = players[currentPlayerIndex];
    currentPlayerDisplay.textContent = `р╕Ьр╕╣р╣Йр╣Ар╕ер╣Ир╕Щ: ${currentPlayer.name}`;
    showScreen('category-screen');
}

function startGameForCurrentPlayer(category) {
    currentCategory = category;
    currentQuestionIndex = 0;
    loadQuestion();
    showScreen('game-screen');
}

// --- р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕Бр╕▓р╕гр╣Вр╕лр╕ер╕Фр╕Др╕│р╕Цр╕▓р╕б ---
function loadQuestion() {
    // р╕лр╕вр╕╕р╕Ф Timer р╕Бр╣Ир╕нр╕Щр╣Вр╕лр╕ер╕Фр╕Вр╣Йр╕нр╣Гр╕лр╕бр╣И
    clearInterval(timerInterval);

    const categoryQuestions = gameData[currentCategory];
    if (!categoryQuestions || categoryQuestions.length === 0) {
        console.error("р╣Др╕бр╣Ир╕бр╕╡р╕Др╕│р╕Цр╕▓р╕бр╣Гр╕Щр╕лр╕бр╕зр╕Фр╕Щр╕╡р╣Й:", currentCategory);
        endGame(); // р╕лр╕гр╕╖р╕нр╕Ир╕▒р╕Фр╕Бр╕▓р╕гр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф
        return;
    }

    if (currentQuestionIndex >= MAX_QUESTIONS || currentQuestionIndex >= categoryQuestions.length) {
        endPlayerTurn();
        return;
    }

    const question = categoryQuestions[currentQuestionIndex];

    gamePlayerName.textContent = players[currentPlayerIndex].name;
    gamePlayerScore.textContent = players[currentPlayerIndex].score;
    questionNumberDisplay.textContent = currentQuestionIndex + 1;
    timerDisplay.textContent = TIME_PER_QUESTION;
    timerBar.style.width = '100%';

    questionImage.textContent = question.emoji;
    questionTitle.textContent = question.title;

    // р╕кр╕╕р╣Ир╕бр╕ер╕│р╕Фр╕▒р╕Ър╕Вр╕▒р╣Йр╕Щр╕Хр╕нр╕Щ
    let shuffledSteps = [...question.steps];
    // Fisher-Yates shuffle algorithm
    for (let i = shuffledSteps.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [shuffledSteps[i], shuffledSteps[j]] = [shuffledSteps[j], shuffledSteps[i]];
    }

    stepsContainer.innerHTML = '';
    shuffledSteps.forEach((step, index) => {
        const stepDiv = document.createElement('div');
        stepDiv.className = 'draggable bg-white p-4 rounded-xl shadow-md text-center cursor-grab text-lg flex items-center justify-center min-h-[90px] hover:bg-gray-50';
        stepDiv.setAttribute('draggable', true);
        stepDiv.dataset.originalIndex = question.steps.indexOf(step); // р╣Ар╕Бр╣Зр╕Ъ index р╣Ар╕Фр╕┤р╕б
        stepDiv.innerHTML = `<span class="mr-2 text-2xl">${step.emoji}</span>${step.text.split('. ')[1]}`; // р╣Бр╕кр╕Фр╕З emoji + р╕Вр╣Йр╕нр╕Др╕зр╕▓р╕б
        stepsContainer.appendChild(stepDiv);
    });

    dropZonesContainer.innerHTML = '';
    for (let i = 0; i < question.steps.length; i++) {
        const dropZoneDiv = document.createElement('div');
        dropZoneDiv.className = 'drop-zone flex items-center justify-center';
        dropZoneDiv.dataset.position = i;
        dropZoneDiv.innerHTML = `<span class="text-gray-400 text-lg">${i + 1}</span>`;
        dropZonesContainer.appendChild(dropZoneDiv);
    }

    // р╕гр╕╡р╣Ар╕Лр╣Зр╕Хр╕кр╕Цр╕▓р╕Щр╕░р╕Ыр╕╕р╣Ир╕б
    submitAnswerBtn.classList.remove('hidden');
    nextQuestionBtn.classList.add('hidden');

    setupDragAndDrop(); // р╕Хр╕▒р╣Йр╕Зр╕Др╣Ир╕▓ Drag and Drop р╣Гр╕лр╕бр╣Ир╕Чр╕╕р╕Бр╕Др╕гр╕▒р╣Йр╕Зр╕Чр╕╡р╣Ир╣Вр╕лр╕ер╕Фр╕Др╕│р╕Цр╕▓р╕б
    startTimer(); // р╣Ар╕гр╕┤р╣Ир╕б Timer
}

// --- р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щ Drag & Drop р╣Бр╕ер╕░ Touch Support ---
let draggedItem = null;
let touchOffset = { x: 0, y: 0 };
let isDraggingTouch = false;
let originalParent = null;
let originalNextSibling = null;

function setupDragAndDrop() {
    const draggables = document.querySelectorAll('.draggable');
    const dropZones = document.querySelectorAll('.drop-zone');

    draggables.forEach(draggable => {
        // Mobile click support - р╕Ыр╕гр╕▒р╕Ър╕Ыр╕гр╕╕р╕Зр╣Гр╕лр╣Йр╕Чр╕│р╕Зр╕▓р╕Щр╕Зр╣Ир╕▓р╕вр╕Вр╕╢р╣Йр╕Щ
        draggable.addEventListener('click', (e) => {
            e.preventDefault();
            e.stopPropagation();

            // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓р╣Ар╕Ыр╣Зр╕Щр╕Бр╕▓р╕гр╕Др╕ер╕┤р╕Бр╕Ър╕Щр╕бр╕╖р╕нр╕Цр╕╖р╕нр╕лр╕гр╕╖р╕нр╣Др╕бр╣И
            const isMobile = window.innerWidth <= 768;

            if (isMobile) {
                // р╕кр╕│р╕лр╕гр╕▒р╕Ър╕бр╕╖р╕нр╕Цр╕╖р╕н: р╕Цр╣Йр╕▓р╕вр╕▒р╕Зр╣Др╕бр╣Ир╕бр╕╡р╕Хр╕▒р╕зр╕Чр╕╡р╣Ир╣Ар╕ер╕╖р╕нр╕Б р╣Гр╕лр╣Йр╣Ар╕ер╕╖р╕нр╕Бр╕Хр╕▒р╕зр╕Щр╕╡р╣Й
                if (!selectedForMove) {
                    selectedForMove = draggable;
                    draggable.style.backgroundColor = 'rgba(59, 130, 246, 0.3)';
                    draggable.style.border = '2px solid #3b82f6';
                    draggable.style.transform = 'scale(1.02)';

                    showMobileInstruction('р╣Бр╕Хр╕░р╕Чр╕╡р╣Ир╕Хр╕│р╣Бр╕лр╕Щр╣Ир╕Зр╕Чр╕╡р╣Ир╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╕зр╕▓р╕З');
                    return;
                }

                // р╕Цр╣Йр╕▓р╕Др╕ер╕┤р╕Бр╕Хр╕▒р╕зр╣Ар╕Фр╕┤р╕бр╕нр╕╡р╕Бр╕Др╕гр╕▒р╣Йр╕З р╣Гр╕лр╣Йр╕вр╕Бр╣Ар╕ер╕┤р╕Бр╕Бр╕▓р╕гр╣Ар╕ер╕╖р╕нр╕Б
                if (selectedForMove === draggable) {
                    deselectItem();
                    return;
                }
            }
        });

        // Desktop Drag Events
        draggable.addEventListener('dragstart', (e) => {
            e.dataTransfer.effectAllowed = 'move';
            e.dataTransfer.setData('text/html', draggable.outerHTML);
            e.dataTransfer.setData('text/plain', '');

            draggedItem = draggable;
            originalParent = draggable.parentNode;
            originalNextSibling = draggable.nextSibling;

            setTimeout(() => {
                draggable.classList.add('dragging');
            }, 0);
        });

        draggable.addEventListener('dragend', (e) => {
            if (draggedItem) {
                draggedItem.classList.remove('dragging');

                // Clear any remaining highlights
                document.querySelectorAll('.drop-zone').forEach(zone => {
                    zone.classList.remove('highlight');
                });
                document.getElementById('steps-container')?.classList.remove('highlight');

                draggedItem = null;
                originalParent = null;
                originalNextSibling = null;
            }
        });

        // Touch Events for Mobile - р╕Ыр╕гр╕▒р╕Ър╕Ыр╕гр╕╕р╕Зр╣Гр╕лр╣Йр╕Хр╕нр╕Ър╕кр╕Щр╕нр╕Зр╣Ар╕гр╣Зр╕зр╕Вр╕╢р╣Йр╕Щ
        draggable.addEventListener('touchstart', (e) => {
            e.preventDefault();
            e.stopPropagation();

            const touch = e.touches[0];
            const rect = draggable.getBoundingClientRect();

            touchOffset.x = touch.clientX - rect.left;
            touchOffset.y = touch.clientY - rect.top;

            draggedItem = draggable;
            originalParent = draggable.parentNode;
            originalNextSibling = draggable.nextSibling;
            isDraggingTouch = true;

            // Store original styles
            draggable.dataset.originalPosition = draggable.style.position || '';
            draggable.dataset.originalZIndex = draggable.style.zIndex || '';
            draggable.dataset.originalLeft = draggable.style.left || '';
            draggable.dataset.originalTop = draggable.style.top || '';
            draggable.dataset.originalWidth = draggable.style.width || '';
            draggable.dataset.originalHeight = draggable.style.height || '';

            // Add immediate visual feedback
            draggable.classList.add('dragging');
            draggable.style.position = 'fixed';
            draggable.style.zIndex = '1000';
            draggable.style.pointerEvents = 'none';
            draggable.style.width = rect.width + 'px';
            draggable.style.height = rect.height + 'px';
            draggable.style.left = (touch.clientX - touchOffset.x) + 'px';
            draggable.style.top = (touch.clientY - touchOffset.y) + 'px';
            draggable.style.transition = 'none';

            // Add to body to ensure proper positioning
            if (draggable.parentNode !== document.body) {
                document.body.appendChild(draggable);
            }
        }, { passive: false });

        draggable.addEventListener('touchmove', (e) => {
            if (!isDraggingTouch || !draggedItem) return;
            e.preventDefault();
            e.stopPropagation();

            const touch = e.touches[0];

            // Update position immediately
            if (draggedItem) {
                draggedItem.style.left = (touch.clientX - touchOffset.x) + 'px';
                draggedItem.style.top = (touch.clientY - touchOffset.y) + 'px';
            }

            // Find element below touch point
            const elementBelow = document.elementFromPoint(touch.clientX, touch.clientY);

            // Remove all highlights first
            document.querySelectorAll('.drop-zone').forEach(zone => {
                zone.classList.remove('highlight');
            });
            document.getElementById('steps-container')?.classList.remove('highlight');

            // Check for drop zone
            const dropZone = elementBelow?.closest('.drop-zone');
            if (dropZone && !dropZone.contains(draggedItem)) {
                dropZone.classList.add('highlight');
            }

            // Check for steps container
            const stepsContainer = document.getElementById('steps-container');
            if (elementBelow === stepsContainer || 
                (stepsContainer && stepsContainer.contains(elementBelow) && !stepsContainer.contains(draggedItem))) {
                stepsContainer.classList.add('highlight');
            }
        }, { passive: false });

        draggable.addEventListener('touchend', (e) => {
            if (!isDraggingTouch || !draggedItem) return;
            e.preventDefault();
            e.stopPropagation();

            const touch = e.changedTouches[0];
            const elementBelow = document.elementFromPoint(touch.clientX, touch.clientY);

            // Reset dragged item style using stored values
            if (draggedItem) {
                draggedItem.style.position = draggedItem.dataset.originalPosition || '';
                draggedItem.style.zIndex = draggedItem.dataset.originalZIndex || '';
                draggedItem.style.pointerEvents = '';
                draggedItem.style.left = draggedItem.dataset.originalLeft || '';
                draggedItem.style.top = draggedItem.dataset.originalTop || '';
                draggedItem.style.width = draggedItem.dataset.originalWidth || '';
                draggedItem.style.height = draggedItem.dataset.originalHeight || '';
                draggedItem.style.transition = '';
                draggedItem.classList.remove('dragging');

                // Clean up stored data
                delete draggedItem.dataset.originalPosition;
                delete draggedItem.dataset.originalZIndex;
                delete draggedItem.dataset.originalLeft;
                delete draggedItem.dataset.originalTop;
                delete draggedItem.dataset.originalWidth;
                delete draggedItem.dataset.originalHeight;
            }

            // Remove all highlights
            document.querySelectorAll('.drop-zone').forEach(zone => {
                zone.classList.remove('highlight');
            });
            document.getElementById('steps-container')?.classList.remove('highlight');

            // Find target drop zone or steps container
            const dropZone = elementBelow?.closest('.drop-zone');
            const stepsContainer = document.getElementById('steps-container');

            let dropHandled = false;

            if (dropZone && !dropZone.contains(draggedItem)) {
                handleDrop(dropZone);
                dropHandled = true;
            } else if (elementBelow === stepsContainer || 
                      (stepsContainer && stepsContainer.contains(elementBelow) && !stepsContainer.contains(draggedItem))) {
                handleDropToSteps();
                dropHandled = true;
            }

            // If drop wasn't handled, return to original position
            if (!dropHandled && originalParent) {
                if (originalNextSibling && originalParent.contains(originalNextSibling)) {
                    originalParent.insertBefore(draggedItem, originalNextSibling);
                } else {
                    originalParent.appendChild(draggedItem);
                }
            }

            isDraggingTouch = false;
            draggedItem = null;
            originalParent = null;
            originalNextSibling = null;
        }, { passive: false });
    });

    // Desktop drop events and mobile click events
    dropZones.forEach(dropZone => {
        dropZone.addEventListener('dragover', (e) => {
            e.preventDefault();
            e.dataTransfer.dropEffect = 'move';
            dropZone.classList.add('highlight');
        });

        dropZone.addEventListener('dragenter', (e) => {
            e.preventDefault();
            dropZone.classList.add('highlight');
        });

        dropZone.addEventListener('dragleave', (e) => {
            // Only remove highlight if we're leaving the dropZone completely
            if (!dropZone.contains(e.relatedTarget)) {
                dropZone.classList.remove('highlight');
            }
        });

        dropZone.addEventListener('drop', (e) => {
            e.preventDefault();
            e.stopPropagation();
            dropZone.classList.remove('highlight');

            if (draggedItem) {
                handleDrop(dropZone);
            }
        });

        // Mobile click support - р╕Ыр╕гр╕▒р╕Ър╕Ыр╕гр╕╕р╕Зр╣Гр╕лр╣Йр╕Чр╕│р╕Зр╕▓р╕Щр╕Зр╣Ир╕▓р╕вр╕Вр╕╢р╣Йр╕Щ
        dropZone.addEventListener('click', (e) => {
            e.preventDefault();
            e.stopPropagation();

            // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓р╣Ар╕Ыр╣Зр╕Щр╕Бр╕▓р╕гр╕Др╕ер╕┤р╕Бр╕Ър╕Щр╕бр╕╖р╕нр╕Цр╕╖р╕нр╕лр╕гр╕╖р╕нр╣Др╕бр╣И
            const isMobile = window.innerWidth <= 768;

            if (isMobile) {
                // р╕кр╕│р╕лр╕гр╕▒р╕Ър╕бр╕╖р╕нр╕Цр╕╖р╕н: р╕Цр╣Йр╕▓р╕вр╕▒р╕Зр╣Др╕бр╣Ир╕бр╕╡р╕Хр╕▒р╕зр╕Чр╕╡р╣Ир╣Ар╕ер╕╖р╕нр╕Б р╣Гр╕лр╣Йр╣Ар╕ер╕╖р╕нр╕Бр╕Хр╕▒р╕зр╕Щр╕╡р╣Й
                if (!selectedForMove) {
                    selectedForMove = draggable;
                    selectedForMove.style.backgroundColor = 'rgba(59, 130, 246, 0.3)';
                    selectedForMove.style.border = '2px solid #3b82f6';
                    selectedForMove.style.transform = 'scale(1.02)';

                    showMobileInstruction('р╣Бр╕Хр╕░р╕Чр╕╡р╣Ир╕Хр╕│р╣Бр╕лр╕Щр╣Ир╕Зр╕Чр╕╡р╣Ир╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╕зр╕▓р╕З');
                    return;
                }

                // р╕Цр╣Йр╕▓р╕Др╕ер╕┤р╕Бр╕Хр╕▒р╕зр╣Ар╕Фр╕┤р╕бр╕нр╕╡р╕Бр╕Др╕гр╕▒р╣Йр╕З р╣Гр╕лр╣Йр╕вр╕Бр╣Ар╕ер╕┤р╕Бр╕Бр╕▓р╕гр╣Ар╕ер╕╖р╕нр╕Б
                if (selectedForMove === draggable) {
                    deselectItem();
                    return;
                }
            }
        });
    });

    // Steps container drop events and mobile click events
    const stepsContainer = document.getElementById('steps-container');
    if (stepsContainer) {
        stepsContainer.addEventListener('dragover', (e) => {
            e.preventDefault();
            e.dataTransfer.dropEffect = 'move';
            stepsContainer.classList.add('highlight');
        });

        stepsContainer.addEventListener('dragenter', (e) => {
            e.preventDefault();
            stepsContainer.classList.add('highlight');
        });

        stepsContainer.addEventListener('dragleave', (e) => {
            // Only remove highlight if we're leaving the stepsContainer completely
            if (!stepsContainer.contains(e.relatedTarget)) {
                stepsContainer.classList.remove('highlight');
            }
        });

        stepsContainer.addEventListener('drop', (e) => {
            e.preventDefault();
            e.stopPropagation();
            stepsContainer.classList.remove('highlight');

            if (draggedItem) {
                handleDropToSteps();
            }
        });

        // Mobile click support - р╕Ыр╕гр╕▒р╕Ър╕Ыр╕гр╕╕р╕Зр╣Гр╕лр╣Йр╕Чр╕│р╕Зр╕▓р╕Щр╕Зр╣Ир╕▓р╕вр╕Вр╕╢р╣Йр╕Щ
        stepsContainer.addEventListener('click', (e) => {
            e.preventDefault();
            e.stopPropagation();

            // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓р╣Ар╕Ыр╣Зр╕Щр╕Бр╕▓р╕гр╕Др╕ер╕┤р╕Бр╕Ър╕Щр╕бр╕╖р╕нр╕Цр╕╖р╕нр╕лр╕гр╕╖р╕нр╣Др╕бр╣И
            const isMobile = window.innerWidth <= 768;

            if (isMobile) {
                // р╕кр╕│р╕лр╕гр╕▒р╕Ър╕бр╕╖р╕нр╕Цр╕╖р╕н: р╕Цр╣Йр╕▓р╕вр╕▒р╕Зр╣Др╕бр╣Ир╕бр╕╡р╕Хр╕▒р╕зр╕Чр╕╡р╣Ир╣Ар╕ер╕╖р╕нр╕Б р╣Гр╕лр╣Йр╣Ар╕ер╕╖р╕нр╕Бр╕Хр╕▒р╕зр╕Щр╕╡р╣Й
                if (!selectedForMove) {
                    selectedForMove = draggable;
                    selectedForMove.style.backgroundColor = 'rgba(59, 130, 246, 0.3)';
                    selectedForMove.style.border = '2px solid #3b82f6';
                    selectedForMove.style.transform = 'scale(1.02)';

                    showMobileInstruction('р╣Бр╕Хр╕░р╕Чр╕╡р╣Ир╕Хр╕│р╣Бр╕лр╕Щр╣Ир╕Зр╕Чр╕╡р╣Ир╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╕зр╕▓р╕З');
                    return;
                }

                // р╕Цр╣Йр╕▓р╕Др╕ер╕┤р╕Бр╕Хр╕▒р╕зр╣Ар╕Фр╕┤р╕бр╕нр╕╡р╕Бр╕Др╕гр╕▒р╣Йр╕З р╣Гр╕лр╣Йр╕вр╕Бр╣Ар╕ер╕┤р╕Бр╕Бр╕▓р╕гр╣Ар╕ер╕╖р╕нр╕Б
                if (selectedForMove === draggable) {
                    deselectItem();
                    return;
                }
            }
        });
    }
}

function handleDrop(dropZone) {
    if (!draggedItem) return;

    // р╕Цр╣Йр╕▓ dropZone р╕зр╣Ир╕▓р╕Зр╣Ар╕Ыр╕ер╣Ир╕▓ р╕лр╕гр╕╖р╕нр╕бр╕╡ textNode '1', '2', '3', '4' р╕нр╕вр╕╣р╣И
    if (dropZone.children.length === 1 && dropZone.children[0].tagName === 'SPAN') {
        dropZone.innerHTML = ''; // р╣Ар╕Др╕ер╕╡р╕вр╕гр╣Мр╣Ар╕ер╕Вр╕ер╕│р╕Фр╕▒р╕Ъ
        dropZone.appendChild(draggedItem);
        dropZone.classList.add('filled');

        // р╕ер╕Ър╕Ир╕▓р╕Бр╕Хр╕│р╣Бр╕лр╕Щр╣Ир╕Зр╣Ар╕Фр╕┤р╕бр╕Цр╣Йр╕▓р╕бр╕▓р╕Ир╕▓р╕Б dropZone р╕нр╕╖р╣Ир╕Щ
        const previousDropZone = document.querySelector('.drop-zone.filled .draggable')?.closest('.drop-zone');
        if (previousDropZone && previousDropZone !== dropZone) {
            // р╕лр╕▓ dropZone р╣Ар╕Фр╕┤р╕бр╕Чр╕╡р╣Ир╕бр╕╡ draggedItem р╣Бр╕ер╕░р╣Ар╕Др╕ер╕╡р╕вр╕гр╣М
            document.querySelectorAll('.drop-zone').forEach(zone => {
                if (zone !== dropZone && zone.contains(draggedItem)) {
                    zone.innerHTML = `<span class="text-gray-400 text-lg">${parseInt(zone.dataset.position) + 1}</span>`;
                    zone.classList.remove('filled');
                }
            });
        }
    } else if (dropZone.children.length > 0 && dropZone.children[0].classList.contains('draggable')) {
        // р╕Цр╣Йр╕▓ dropZone р╕бр╕╡ item р╕нр╕вр╕╣р╣Ир╣Бр╕ер╣Йр╕з р╣Гр╕лр╣Йр╕кр╕ер╕▒р╕Ър╕Хр╕│р╣Бр╕лр╕Щр╣Ир╕Зр╕Бр╕▒р╕Щ
        const existingItem = dropZone.children[0];
        const draggedItemParent = draggedItem.closest('.drop-zone') || document.getElementById('steps-container');

        // р╕кр╕ер╕▒р╕Ър╕Хр╕│р╣Бр╕лр╕Щр╣Ир╕З
        if (draggedItemParent.classList.contains('drop-zone')) {
            // р╕Цр╣Йр╕▓ draggedItem р╕бр╕▓р╕Ир╕▓р╕Б dropZone р╕нр╕╖р╣Ир╕Щ р╣Гр╕лр╣Йр╕кр╕ер╕▒р╕Ър╕Бр╕▒р╕Щ
            draggedItemParent.innerHTML = '';
            draggedItemParent.appendChild(existingItem);
            draggedItemParent.classList.add('filled');
        } else {
            // р╕Цр╣Йр╕▓ draggedItem р╕бр╕▓р╕Ир╕▓р╕Б stepsContainer р╣Гр╕лр╣Йр╕кр╣Ир╕З existingItem р╕Бр╕ер╕▒р╕Ър╣Др╕Ы
            document.getElementById('steps-container').appendChild(existingItem);
        }

        dropZone.innerHTML = '';
        dropZone.appendChild(draggedItem);
        dropZone.classList.add('filled');
    }
}

function handleDropToSteps() {
    if (!draggedItem) return;

    // р╕лр╕▓ dropZone р╣Ар╕Фр╕┤р╕бр╕Чр╕╡р╣Ир╕бр╕╡ draggedItem р╣Бр╕ер╕░р╣Ар╕Др╕ер╕╡р╕вр╕гр╣М
    document.querySelectorAll('.drop-zone').forEach(zone => {
        if (zone.contains(draggedItem)) {
            zone.innerHTML = `<span class="text-gray-400 text-lg">${parseInt(zone.dataset.position) + 1}</span>`;
            zone.classList.remove('filled');
        }
    });
    document.getElementById('steps-container').appendChild(draggedItem);
}

// --- р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щ Timer ---
function startTimer() {
    timeLeft = TIME_PER_QUESTION;
    timerDisplay.textContent = timeLeft;
    timerBar.style.width = '100%'; // р╕гр╕╡р╣Ар╕Лр╣Зр╕Хр╕Др╕зр╕▓р╕бр╕Бр╕зр╣Йр╕▓р╕Зр╕Вр╕нр╕З Timer bar

    timerInterval = setInterval(() => {
        timeLeft--;
        timerDisplay.textContent = timeLeft;
        timerBar.style.width = `${(timeLeft / TIME_PER_QUESTION) * 100}%`;

        if (timeLeft <= 10) {
            timerBar.style.backgroundColor = '#f59e0b'; // р╕кр╕╡р╕кр╣Йр╕б
        }
        if (timeLeft <= 5) {
            timerBar.style.backgroundColor = '#ef4444'; // р╕кр╕╡р╣Бр╕Фр╕З
        }
        if (timeLeft <= 0) {
            clearInterval(timerInterval);
            timerDisplay.textContent = 'р╕лр╕бр╕Фр╣Ар╕зр╕ер╕▓!';
            checkAnswer(true); // р╕Хр╕гр╕зр╕Ир╕Др╕│р╕Хр╕нр╕Ър╣Ар╕бр╕╖р╣Ир╕нр╕лр╕бр╕Фр╣Ар╕зр╕ер╕▓
        }
    }, 1000);
}

// --- р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕Бр╕▓р╕гр╕Хр╕гр╕зр╕Ир╕Др╕│р╕Хр╕нр╕Ъ ---
function checkAnswer(timedOut = false) {
    clearInterval(timerInterval); // р╕лр╕вр╕╕р╕Ф Timer
    submitAnswerBtn.classList.add('hidden');

    const currentQuestion = gameData[currentCategory][currentQuestionIndex];
    const dropZones = document.querySelectorAll('#drop-zones .drop-zone');
    let userAnswer = [];
    let isCorrect = false;

    // р╕Фр╕╢р╕Зр╕ер╕│р╕Фр╕▒р╕Ър╕Др╕│р╕Хр╕нр╕Ър╕Вр╕нр╕Зр╕Ьр╕╣р╣Йр╣Ар╕ер╣Ир╕Щ
    dropZones.forEach(zone => {
        const item = zone.querySelector('.draggable');
        if (item) {
            userAnswer.push(parseInt(item.dataset.originalIndex));
        } else {
            userAnswer.push(null); // р╕Цр╣Йр╕▓р╕бр╕╡р╕Кр╣Ир╕нр╕Зр╕зр╣Ир╕▓р╕З
        }
    });

    // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Др╕зр╕▓р╕бр╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕З
    if (!userAnswer.includes(null)) { // р╕Хр╣Йр╕нр╕Зр╣Др╕бр╣Ир╕бр╕╡р╕Кр╣Ир╕нр╕Зр╕зр╣Ир╕▓р╕З
        isCorrect = currentQuestion.correctOrders.some(correctOrder => {
            return JSON.stringify(userAnswer) === JSON.stringify(correctOrder);
        });
    }

    // р╣Бр╕кр╕Фр╕З popup modal
    showAnswerModal(isCorrect, timedOut, currentQuestion);

    if (isCorrect && !timedOut) {
        players[currentPlayerIndex].score++;
        // р╣Ар╕Юр╕┤р╣Ир╕б animation р╕лр╕гр╕╖р╕н effect р╣Ар╕бр╕╖р╣Ир╕нр╕Хр╕нр╕Ър╕Цр╕╣р╕Б
        dropZonesContainer.classList.add('correct-answer');
    } else {
        // р╣Ар╕Юр╕┤р╣Ир╕б animation р╕лр╕гр╕╖р╕н effect р╣Ар╕бр╕╖р╣Ир╕нр╕Хр╕нр╕Ър╕Ьр╕┤р╕Ф
        dropZonesContainer.classList.add('wrong-answer');
    }

    // р╕ер╕Ъ animation class р╕лр╕ер╕▒р╕Зр╣Бр╕кр╕Фр╕Зр╕Ьр╕е
    setTimeout(() => {
        dropZonesContainer.classList.remove('correct-answer', 'wrong-answer');
    }, 1000);

    gamePlayerScore.textContent = players[currentPlayerIndex].score; // р╕нр╕▒р╕Юр╣Ар╕Фр╕Чр╕Др╕░р╣Бр╕Щр╕Щ
}

// --- р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕Бр╕▓р╕гр╣Ар╕Ыр╕ер╕╡р╣Ир╕вр╕Щр╕Вр╣Йр╕н/р╕Ьр╕╣р╣Йр╣Ар╕ер╣Ир╕Щ ---
function nextQuestion() {
    currentQuestionIndex++;
    loadQuestion();
}

function endPlayerTurn() {
    clearInterval(timerInterval); // р╕лр╕вр╕╕р╕Ф Timer
    currentPlayerIndex++; // р╣Др╕Ыр╕Ьр╕╣р╣Йр╣Ар╕ер╣Ир╕Щр╕Др╕Щр╕Цр╕▒р╕Фр╣Др╕Ы

    if (currentPlayerIndex < players.length) {
        // р╕Ьр╕╣р╣Йр╣Ар╕ер╣Ир╕Щр╕Др╕Щр╕Цр╕▒р╕Фр╣Др╕Ыр╕вр╕▒р╕Зр╕бр╕╡р╕нр╕вр╕╣р╣И р╣Гр╕лр╣Йр╣Ар╕ер╕╖р╕нр╕Бр╕лр╕бр╕зр╕Фр╣Гр╕лр╕бр╣И
        showCategorySelection();
    } else {
        // р╣Ар╕ер╣Ир╕Щр╕Др╕гр╕Ър╕Чр╕╕р╕Бр╕Др╕Щр╣Бр╕ер╣Йр╕з р╣Бр╕кр╕Фр╕Зр╕Ьр╕ер╕кр╕гр╕╕р╕Ы
        endGame();
    }
}

function endGame() {
    showResultScreen();
}

// --- р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╣Бр╕кр╕Фр╕Зр╕Ьр╕ер╕кр╕гр╕╕р╕Ы ---
function showResultScreen() {
    showScreen('result-screen');
    const currentPlayer = players[currentPlayerIndex -1]; // р╕Ьр╕╣р╣Йр╣Ар╕ер╣Ир╕Щр╕Др╕Щр╕кр╕╕р╕Фр╕Чр╣Йр╕▓р╕вр╕Чр╕╡р╣Ир╣Ар╕ер╣Ир╕Щ

    resultPlayerName.textContent = currentPlayer ? currentPlayer.name : 'р╣Др╕бр╣Ир╕бр╕╡р╕Вр╣Йр╕нр╕бр╕╣р╕е';
    resultPlayerScore.textContent = currentPlayer ? `${currentPlayer.score}/${MAX_QUESTIONS}` : '0/10';

    // р╕Бр╕│р╕лр╕Щр╕Фр╕гр╕░р╕Фр╕▒р╕Ър╕Др╕зр╕▓р╕бр╣Ар╕Бр╣Ир╕З
    let level = "р╣Ар╕гр╕┤р╣Ир╕бр╕Хр╣Йр╕Щ";
    if (currentPlayer) {
        if (currentPlayer.score >= 8) {
            level = "р╕вр╕нр╕Фр╣Ар╕вр╕╡р╣Ир╕вр╕б!";
            createConfetti(); // р╣Ар╕Йр╕ер╕┤р╕бр╕Йр╕ер╕нр╕Зр╕Фр╣Йр╕зр╕в confetti
        } else if (currentPlayer.score >= 5) {
            level = "р╕Фр╕╡р╕бр╕▓р╕Б";
        }
    }
    resultPlayerLevel.textContent = level;

    updateLeaderboard();
}

function updateLeaderboard() {
    leaderboard.innerHTML = '';
    // р╣Ар╕гр╕╡р╕вр╕Зр╕ер╕│р╕Фр╕▒р╕Ър╕Ьр╕╣р╣Йр╣Ар╕ер╣Ир╕Щр╕Хр╕▓р╕бр╕Др╕░р╣Бр╕Щр╕Щр╕Ир╕▓р╕Бр╕бр╕▓р╕Бр╣Др╕Ыр╕Щр╣Йр╕нр╕в
    const sortedPlayers = [...players].sort((a, b) => b.score - a.score);

    sortedPlayers.forEach((player, index) => {
        const playerEntry = document.createElement('div');
        playerEntry.className = `player-score flex items-center justify-between p-3 mb-2 bg-white rounded-lg shadow-sm text-lg ${index === 0 ? 'highlight' : ''}`;
        playerEntry.innerHTML = `
            <span class="font-bold text-gray-700">${index + 1}. ${player.name}</span>
            <span class="font-semibold text-indigo-600">${player.score} р╕Др╕░р╣Бр╕Щр╕Щ</span>
        `;
        leaderboard.appendChild(playerEntry);
    });
}

// --- р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╣Бр╕кр╕Фр╕З Answer Modal ---
function showAnswerModal(isCorrect, timedOut, question) {
    let modalHTML = '';

    // р╕кр╕гр╣Йр╕▓р╕Зр╣Ар╕Йр╕ер╕вр╕Чр╕╕р╕Бр╕гр╕╣р╕Ыр╣Бр╕Ър╕Ъ
    const allSolutionsHTML = question.correctOrders.map((correctOrder, solutionIndex) => {
        const solutionTitle = question.correctOrders.length > 1 ? `р╕зр╕┤р╕Шр╕╡р╕Чр╕╡р╣И ${solutionIndex + 1}:` : 'р╣Ар╕Йр╕ер╕в:';
        return `
            <div class="mb-4 ${solutionIndex > 0 ? 'border-t border-gray-300 pt-4' : ''}">
                <h4 class="text-md font-semibold mb-2 ${isCorrect && !timedOut ? 'text-green-700' : 'text-red-700'}">${solutionTitle}</h4>
                <div class="text-left">
                    ${correctOrder.map((idx, i) => 
                        `<p class="text-sm mb-1 ${isCorrect && !timedOut ? 'text-green-600' : 'text-red-600'}">${i + 1}. ${question.steps[idx].emoji} ${question.steps[idx].text.split('. ')[1]}</p>`
                    ).join('')}
                </div>
            </div>
        `;
    }).join('');

    if (isCorrect && !timedOut) {
        // р╕Хр╕нр╕Ър╕Цр╕╣р╕Б
        modalHTML = `
            <div class="text-center">
                <div class="text-8xl mb-4 correct-emoji">ЁЯОЙ</div>
                <h2 class="text-3xl font-bold text-green-600 mb-4">р╕вр╕┤р╕Щр╕Фр╕╡р╕Фр╣Йр╕зр╕в!</h2>
                <p class="text-xl text-gray-700 mb-4">р╕Др╕│р╕Хр╕нр╕Ър╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕З!</p>
                <div class="bg-green-50 border border-green-200 rounded-lg p-4 max-h-60 overflow-y-auto">
                    <h3 class="text-lg font-semibold text-green-700 mb-3">${question.correctOrders.length > 1 ? 'р╣Ар╕Йр╕ер╕вр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Фр╕Чр╕╡р╣Ир╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕З:' : 'р╣Ар╕Йр╕ер╕в:'}</h3>
                    ${allSolutionsHTML}
                    ${question.correctOrders.length > 1 ? `<p class="text-xs text-green-500 mt-3 italic">* р╕бр╕╡р╕лр╕ер╕▓р╕вр╕зр╕┤р╕Шр╕╡р╕Чр╕╡р╣Ир╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕Зр╣Гр╕Щр╕Кр╕╡р╕зр╕┤р╕Хр╕Ир╕гр╕┤р╕З</p>` : ''}
                </div>
            </div>
        `;
    } else {
        // р╕Хр╕нр╕Ър╕Ьр╕┤р╕Фр╕лр╕гр╕╖р╕нр╕лр╕бр╕Фр╣Ар╕зр╕ер╕▓
        const reasonText = timedOut ? 'р╕лр╕бр╕Фр╣Ар╕зр╕ер╕▓!' : 'р╕Др╕│р╕Хр╕нр╕Ър╣Др╕бр╣Ир╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕З';
        modalHTML = `
            <div class="text-center">
                <div class="text-8xl mb-4 wrong-emoji">ЁЯШв</div>
                <h2 class="text-3xl font-bold text-red-600 mb-4">р╣Ар╕кр╕╡р╕вр╣Гр╕Ир╕Фр╣Йр╕зр╕в!</h2>
                <p class="text-xl text-gray-700 mb-4">${reasonText}</p>
                <div class="bg-red-50 border border-red-200 rounded-lg p-4 max-h-60 overflow-y-auto">
                    <h3 class="text-lg font-semibold text-red-700 mb-3">${question.correctOrders.length > 1 ? 'р╣Ар╕Йр╕ер╕вр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Фр╕Чр╕╡р╣Ир╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕З:' : 'р╣Ар╕Йр╕ер╕вр╕Чр╕╡р╣Ир╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕З:'}</h3>
                    ${allSolutionsHTML}
                    ${question.correctOrders.length > 1 ? `<p class="text-xs text-red-500 mt-3 italic">* р╕бр╕╡р╕лр╕ер╕▓р╕вр╕зр╕┤р╕Шр╕╡р╕Чр╕╡р╣Ир╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕Зр╣Гр╕Щр╕Кр╕╡р╕зр╕┤р╕Хр╕Ир╕гр╕┤р╕З</p>` : ''}
                </div>
            </div>
        `;
    }

    modalContent.innerHTML = modalHTML;
    answerModal.classList.remove('hidden');
    answerModal.querySelector('.bg-white').classList.add('modal-slide-in');
}

function hideAnswerModal() {
    answerModal.classList.add('hidden');
    answerModal.querySelector('.bg-white').classList.remove('modal-slide-in');
    // р╣Др╕Ыр╕Вр╣Йр╕нр╕Цр╕▒р╕Фр╣Др╕Ыр╕Чр╕▒р╕Щр╕Чр╕╡р╕лр╕ер╕▒р╕Зр╕Ыр╕┤р╕Ф modal
    nextQuestion();
}

// --- р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕гр╕╡р╣Ар╕Лр╣Зр╕Хр╕Др╕│р╕Хр╕нр╕Ъ ---
function resetAnswers() {
    // р╕кр╣Ир╕Зр╕Др╕╖р╕Щр╕Чр╕╕р╕Б draggable item р╕Бр╕ер╕▒р╕Ър╣Др╕Ыр╕вр╕▒р╕З steps container
    const draggableItems = document.querySelectorAll('.drop-zone .draggable');
    const stepsContainer = document.getElementById('steps-container');

    draggableItems.forEach(item => {
        stepsContainer.appendChild(item);
    });

    // р╕гр╕╡р╣Ар╕Лр╣Зр╕Х drop zones р╣Гр╕лр╣Йр╕Бр╕ер╕▒р╕Ър╕бр╕▓р╣Ар╕Ыр╣Зр╕Щр╕Др╣Ир╕▓р╣Ар╕гр╕┤р╣Ир╕бр╕Хр╣Йр╕Щ
    const dropZones = document.querySelectorAll('.drop-zone');
    dropZones.forEach((zone, index) => {
        zone.innerHTML = `<span class="text-gray-400 text-lg">${index + 1}</span>`;
        zone.classList.remove('filled');
    });

    // Clear any mobile selection
    deselectItem();
    hideMobileInstruction();
}

// Functions for mobile click-based interaction
let selectedForMove = null;

function deselectItem() {
    if (selectedForMove) {
        selectedForMove.classList.remove('selected');
        selectedForMove.style.backgroundColor = '';
        selectedForMove.style.transform = '';
        selectedForMove = null;
    }
    hideMobileInstruction();
}

function showMobileInstruction(message) {
    let instruction = document.getElementById('mobile-instruction');
    if (!instruction) {
        instruction = document.createElement('div');
        instruction.id = 'mobile-instruction';
        instruction.className = 'fixed top-4 left-1/2 transform -translate-x-1/2 bg-blue-500 text-white px-4 py-2 rounded-lg z-50 text-sm font-medium';
        document.body.appendChild(instruction);
    }
    instruction.textContent = message;
    instruction.style.display = 'block';
}

function hideMobileInstruction() {
    const instruction = document.getElementById('mobile-instruction');
    if (instruction) {
        instruction.style.display = 'none';
    }
}

// --- Confetti Effect (р╣Ар╕бр╕╖р╣Ир╕нр╣Др╕Фр╣Йр╕Др╕░р╣Бр╕Щр╕Щр╕кр╕╣р╕З) ---
function createConfetti() {
    confettiContainer.innerHTML = ''; // Clear previous confetti
    const colors = ['#f44336', '#e91e63', '#9c27b0', '#673ab7', '#3f51b5', '#2196f3', '#03a9f4', '#00bcd4', '#009688', '#4CAF50', '#8BC34A', '#CDDC39', '#FFEB3B', '#FFC107', '#FF9800', '#FF5722'];

    for (let i = 0; i < 100; i++) {
        const confetti = document.createElement('div');
        confetti.className = 'confetti';
        confetti.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];
        confetti.style.left = `${Math.random() * 100}%`;
        confetti.style.top = `${Math.random() * -20}%`;
        confetti.style.animation = `confetti-fall ${Math.random() * 3 + 2}s linear infinite`; // 2-5 seconds
        confetti.style.animationDelay = `${Math.random() * 5}s`;
        confetti.style.transform = `scale(${Math.random() * 0.8 + 0.2})`; // 0.2-1.0 scale
        confettiContainer.appendChild(confetti);
    }
}

// --- Event Listeners р╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф ---

// р╕Ыр╕╕р╣Ир╕бр╣Ар╕ер╕╖р╕нр╕Бр╕Ир╕│р╕Щр╕зр╕Щр╕Ьр╕╣р╣Йр╣Ар╕ер╣Ир╕Щ
playerCountButtons.forEach(button => {
    button.addEventListener('click', function() {
        const playerCount = parseInt(this.dataset.count);
        setupPlayerRegistration(playerCount); // р╣Ар╕гр╕╡р╕вр╕Бр╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕кр╕гр╣Йр╕▓р╕З input р╕Ьр╕╣р╣Йр╣Ар╕ер╣Ир╕Щ
    });
});

// р╕Ыр╕╕р╣Ир╕б "р╕Бр╕ер╕▒р╕Ъ" р╕Ър╕Щр╕лр╕Щр╣Йр╕▓р╕ер╕Зр╕Чр╕░р╣Ар╕Ър╕╡р╕вр╕Щ
backToStartBtn.addEventListener('click', () => {
    showScreen('start-screen');
});

// р╕Ыр╕╕р╣Ир╕б "р╣Ар╕гр╕┤р╣Ир╕бр╣Ар╕Бр╕б" р╕Ър╕Щр╕лр╕Щр╣Йр╕▓р╕ер╕Зр╕Чр╕░р╣Ар╕Ър╕╡р╕вр╕Щ
startGameBtn.addEventListener('click', startNewGame);

// р╕Бр╕▓р╕гр╣Ар╕ер╕╖р╕нр╕Бр╕лр╕бр╕зр╕Ф
categoryCards.forEach(card => {
    card.addEventListener('click', function() {
        const category = this.dataset.category;
        startGameForCurrentPlayer(category);
    });
});

// р╕Ыр╕╕р╣Ир╕б "р╕кр╣Ир╕Зр╕Др╕│р╕Хр╕нр╕Ъ"
submitAnswerBtn.addEventListener('click', () => checkAnswer(false));

// р╕Ыр╕╕р╣Ир╕б "р╣Др╕Ыр╕Вр╣Йр╕нр╕Цр╕▒р╕Фр╣Др╕Ы"
nextQuestionBtn.addEventListener('click', nextQuestion);

// р╕Ыр╕╕р╣Ир╕б "р╕гр╕╡р╣Ар╕Лр╣Зр╕Хр╕Др╕│р╕Хр╕нр╕Ъ" р╕Ър╕Щр╕лр╕Щр╣Йр╕▓р╣Ар╕Бр╕б
resetAnswerBtn.addEventListener('click', () => {
    resetAnswers();
});

// р╕Ыр╕╕р╣Ир╕б "р╕Бр╕ер╕▒р╕Ър╕лр╕Щр╣Йр╕▓р╕лр╕ер╕▒р╕Б" р╕Ър╕Щр╕лр╕Щр╣Йр╕▓р╣Ар╕Бр╕б
backToHomeFromGameBtn.addEventListener('click', () => {
    clearInterval(timerInterval); // р╕лр╕вр╕╕р╕Ф timer
    showScreen('start-screen'); // р╕Бр╕ер╕▒р╕Ър╣Др╕Ыр╕лр╕Щр╣Йр╕▓р╣Ар╕гр╕┤р╣Ир╕бр╕Хр╣Йр╕Щ
    // р╕гр╕╡р╣Ар╕Лр╣Зр╕Хр╕кр╕Цр╕▓р╕Щр╕░р╣Ар╕Бр╕бр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф
    players = [];
    currentPlayerIndex = 0;
    currentQuestionIndex = 0;
});

// р╕Ыр╕╕р╣Ир╕б "р╣Ар╕ер╣Ир╕Щр╕нр╕╡р╕Бр╕Др╕гр╕▒р╣Йр╕З" р╕Ър╕Щр╕лр╕Щр╣Йр╕▓р╕кр╕гр╕╕р╕Ыр╕Ьр╕е
playAgainBtn.addEventListener('click', () => {
    // р╣Ар╕ер╣Ир╕Щр╕Лр╣Йр╕│р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Ьр╕╣р╣Йр╣Ар╕ер╣Ир╕Щр╕Др╕Щр╣Ар╕Фр╕┤р╕б
    players.forEach(player => player.score = 0); // р╕гр╕╡р╣Ар╕Лр╣Зр╕Хр╕Др╕░р╣Бр╕Щр╕Щр╕Ьр╕╣р╣Йр╣Ар╕ер╣Ир╕Щр╣Ар╕Фр╕┤р╕б
    currentPlayerIndex = 0;
    currentQuestionIndex = 0;
    showCategorySelection();
});

// р╕Ыр╕╕р╣Ир╕б "р╣Ар╕Бр╕бр╣Гр╕лр╕бр╣И" р╕Ър╕Щр╕лр╕Щр╣Йр╕▓р╕кр╕гр╕╕р╕Ыр╕Ьр╕е
newGameBtn.addEventListener('click', () => {
    showScreen('start-screen'); // р╕Бр╕ер╕▒р╕Ър╣Др╕Ыр╕лр╕Щр╣Йр╕▓р╣Ар╕ер╕╖р╕нр╕Бр╕Ир╕│р╕Щр╕зр╕Щр╕Ьр╕╣р╣Йр╣Ар╕ер╣Ир╕Щ
    // р╕гр╕╡р╣Ар╕Лр╣Зр╕Хр╕кр╕Цр╕▓р╕Щр╕░р╣Ар╕Бр╕бр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф
    players = [];
    currentPlayerIndex = 0;
    currentQuestionIndex = 0;
});

// р╕Ыр╕╕р╣Ир╕б "р╕Бр╕ер╕▒р╕Ър╕лр╕Щр╣Йр╕▓р╕лр╕ер╕▒р╕Б" р╕Ър╕Щр╕лр╕Щр╣Йр╕▓р╣Ар╕ер╕╖р╕нр╕Бр╣Вр╕лр╕бр╕Ф
backToHomeBtn.addEventListener('click', () => {
    showScreen('start-screen'); // р╕Бр╕ер╕▒р╕Ър╣Др╕Ыр╕лр╕Щр╣Йр╕▓р╣Ар╕гр╕┤р╣Ир╕бр╕Хр╣Йр╕Щ
    // р╕гр╕╡р╣Ар╕Лр╣Зр╕Хр╕кр╕Цр╕▓р╕Щр╕░р╣Ар╕Бр╕бр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф
    players = [];
    currentPlayerIndex = 0;
    currentQuestionIndex = 0;
});

// р╕Ыр╕╕р╣Ир╕бр╕Ыр╕┤р╕Ф modal
closeModalBtn.addEventListener('click', hideAnswerModal);

// р╕Ыр╕┤р╕Ф modal р╣Ар╕бр╕╖р╣Ир╕нр╕Др╕ер╕┤р╕Бр╕Щр╕нр╕Бр╕Бр╕гр╕нр╕Ъ
answerModal.addEventListener('click', (e) => {
    if (e.target === answerModal) {
        hideAnswerModal();
    }
});

// --- р╣Ар╕гр╕┤р╣Ир╕бр╕Хр╣Йр╕Щр╣Ар╕Бр╕бр╣Ар╕бр╕╖р╣Ир╕н DOM р╣Вр╕лр╕ер╕Фр╣Ар╕кр╕гр╣Зр╕И ---
document.addEventListener('DOMContentLoaded', () => {
    showScreen('start-screen'); // р╣Бр╕кр╕Фр╕Зр╕лр╕Щр╣Йр╕▓р╕Ир╕нр╣Ар╕гр╕┤р╣Ир╕бр╕Хр╣Йр╕Щр╣Ар╕бр╕╖р╣Ир╕нр╣Вр╕лр╕ер╕Фр╕лр╕Щр╣Йр╕▓р╣Ар╕зр╣Зр╕Ъ
});
